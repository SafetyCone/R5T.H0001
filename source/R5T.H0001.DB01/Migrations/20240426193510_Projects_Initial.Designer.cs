// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using R5T.H0001.DB01;

#nullable disable

namespace R5T.H0001.DB01.Migrations
{
    [DbContext(typeof(DB01Context))]
    [Migration("20240426193510_Projects_Initial")]
    partial class Projects_Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("R5T.H0001.Entities.Project", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GitHubRepositoryUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Identity")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsPrivate")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjectFilePathID")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectReferencesListID")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasAlternateKey("Identity");

                    b.HasIndex("ProjectFilePathID")
                        .IsUnique()
                        .HasFilter("[ProjectFilePathID] IS NOT NULL");

                    b.HasIndex("ProjectReferencesListID");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("R5T.H0001.Entities.ProjectFilePath", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasAlternateKey("Value");

                    b.ToTable("ProjectFilePaths");
                });

            modelBuilder.Entity("R5T.H0001.Entities.ProjectFilePathList", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.HasKey("ID");

                    b.ToTable("ProjectFilePathLists");
                });

            modelBuilder.Entity("R5T.H0001.Entities.ProjectFilePathListMapping", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("ProjectFilePathID")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectFilePathListID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ProjectFilePathID");

                    b.HasIndex("ProjectFilePathListID");

                    b.ToTable("ProjectFilePathListMappings");
                });

            modelBuilder.Entity("R5T.H0001.Entities.Project", b =>
                {
                    b.HasOne("R5T.H0001.Entities.ProjectFilePath", "ProjectFilePath")
                        .WithMany()
                        .HasForeignKey("ProjectFilePathID");

                    b.HasOne("R5T.H0001.Entities.ProjectFilePathList", "ProjectReferencesList")
                        .WithMany()
                        .HasForeignKey("ProjectReferencesListID");

                    b.Navigation("ProjectFilePath");

                    b.Navigation("ProjectReferencesList");
                });

            modelBuilder.Entity("R5T.H0001.Entities.ProjectFilePathListMapping", b =>
                {
                    b.HasOne("R5T.H0001.Entities.ProjectFilePath", "ProjectFilePath")
                        .WithMany()
                        .HasForeignKey("ProjectFilePathID");

                    b.HasOne("R5T.H0001.Entities.ProjectFilePathList", "ProjectFilePathList")
                        .WithMany("Mappings")
                        .HasForeignKey("ProjectFilePathListID");

                    b.Navigation("ProjectFilePath");

                    b.Navigation("ProjectFilePathList");
                });

            modelBuilder.Entity("R5T.H0001.Entities.ProjectFilePathList", b =>
                {
                    b.Navigation("Mappings");
                });
#pragma warning restore 612, 618
        }
    }
}
